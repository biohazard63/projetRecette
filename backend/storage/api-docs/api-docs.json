{
    "openapi": "3.0.0",
    "info": {
        "title": "API de Gestion des Recettes",
        "description": "API pour gérer les utilisateurs, recettes, catégories, ingrédients et favoris.",
        "contact": {
            "email": "support@votreapp.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get a list of all categories",
                "description": "Returns a list of all recipe categories.",
                "operationId": "ead5fb1cf2a7453acb2e37928a1b1eaf",
                "responses": {
                    "200": {
                        "description": "A list of categories",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Category"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Create a new category",
                "description": "Creates a new recipe category.",
                "operationId": "bb02f0320882db37f99574196577e446",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Desserts"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Category created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/categories/{id}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get category by ID",
                "description": "Returns a category by its ID.",
                "operationId": "4cdf41756315109f1efc72787db5830a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Categories"
                ],
                "summary": "Update category by ID",
                "description": "Updates a recipe category's details by its ID.",
                "operationId": "19954b1f8aa4916b5f032dc28ea36a24",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Category Name"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Categories"
                ],
                "summary": "Delete category by ID",
                "description": "Deletes a recipe category by its ID.",
                "operationId": "f1b8af6e84bd52b9594d98bde748ebd6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Category deleted successfully"
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/favorite-recipes": {
            "get": {
                "tags": [
                    "Favorite Recipes"
                ],
                "summary": "Get a list of all favorite recipes",
                "description": "Returns a list of all favorite recipes saved by users.",
                "operationId": "6bf4fa53e08031cf9d9ad68802f563ce",
                "responses": {
                    "200": {
                        "description": "A list of favorite recipes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FavoriteRecipe"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Favorite Recipes"
                ],
                "summary": "Add a recipe to favorites",
                "description": "Adds a recipe to the user's list of favorite recipes.",
                "operationId": "4d1957ee2003ea6c40ff3b909b5f4494",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "recipe_id"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "recipe_id": {
                                        "type": "integer",
                                        "example": 5
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Recipe added to favorites successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FavoriteRecipe"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/favorite-recipes/{id}": {
            "get": {
                "tags": [
                    "Favorite Recipes"
                ],
                "summary": "Get favorite recipe by ID",
                "description": "Returns a favorite recipe by its ID.",
                "operationId": "98ed63c92ad9b49ce3d7c2f0035b1070",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the favorite recipe",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Favorite recipe data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FavoriteRecipe"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Favorite recipe not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Favorite recipe not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Favorite Recipes"
                ],
                "summary": "Update favorite recipe by ID",
                "description": "Updates the details of a favorite recipe by its ID.",
                "operationId": "d84c5048451e5ce77d0db664aee2791e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the favorite recipe to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "recipe_id": {
                                        "type": "integer",
                                        "example": 5
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Favorite recipe updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FavoriteRecipe"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Favorite recipe not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Favorite recipe not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Favorite Recipes"
                ],
                "summary": "Delete favorite recipe by ID",
                "description": "Removes a recipe from the user's list of favorite recipes by its ID.",
                "operationId": "02d4c0761270240306257e0d1435726a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the favorite recipe to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Favorite recipe deleted successfully"
                    },
                    "404": {
                        "description": "Favorite recipe not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Favorite recipe not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ingredients": {
            "get": {
                "tags": [
                    "Ingredients"
                ],
                "summary": "Get a list of all ingredients",
                "description": "Returns a list of all ingredients in the system.",
                "operationId": "39ca45df16ed77cc6fa4231d4b0829ba",
                "responses": {
                    "200": {
                        "description": "A list of ingredients",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Ingredient"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Ingredients"
                ],
                "summary": "Create a new ingredient",
                "description": "Creates a new ingredient with the provided data.",
                "operationId": "52194d093351ba6fd994349231ed08be",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Sugar"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Ingredient created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Ingredient"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ingredients/{id}": {
            "get": {
                "tags": [
                    "Ingredients"
                ],
                "summary": "Get ingredient by ID",
                "description": "Returns an ingredient by its ID.",
                "operationId": "e1429941b49f51784908478c60e9d0df",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the ingredient",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ingredient data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Ingredient"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Ingredient not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ingredient not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Ingredients"
                ],
                "summary": "Update ingredient by ID",
                "description": "Updates an ingredient's details by its ID.",
                "operationId": "78e31c455931754bfabbd087abb78e78",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the ingredient to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Brown Sugar"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ingredient updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Ingredient"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Ingredient not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ingredient not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Ingredients"
                ],
                "summary": "Delete ingredient by ID",
                "description": "Deletes an ingredient by its ID.",
                "operationId": "c9be8d333be55722b7962cfec274c556",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the ingredient to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Ingredient deleted successfully"
                    },
                    "404": {
                        "description": "Ingredient not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ingredient not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/recipes": {
            "get": {
                "tags": [
                    "Recipes"
                ],
                "summary": "Get a list of all recipes",
                "description": "Returns a list of all recipes in the system.",
                "operationId": "d4042afb2fbbddc6df47e660bab9cea7",
                "responses": {
                    "200": {
                        "description": "A list of recipes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Recipe"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Recipes"
                ],
                "summary": "Create a new recipe",
                "description": "Creates a new recipe with the provided data.",
                "operationId": "b8e5dc90090b088f52bf6ba8ada1a43f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "description",
                                    "instructions",
                                    "user_id",
                                    "category_id"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Delicious Pancakes"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "A simple and quick pancake recipe."
                                    },
                                    "instructions": {
                                        "type": "string",
                                        "example": "1. Mix ingredients... 2. Cook on medium heat..."
                                    },
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Recipe created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Recipe"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/recipes/{id}": {
            "get": {
                "tags": [
                    "Recipes"
                ],
                "summary": "Get recipe by ID",
                "description": "Returns a recipe by its ID.",
                "operationId": "1574c2a4ecb3074887fb892b23321b20",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the recipe",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Recipe data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Recipe"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Recipe not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Recipe not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Recipes"
                ],
                "summary": "Update recipe by ID",
                "description": "Updates a recipe's details by its ID.",
                "operationId": "83cafcd821c9460d9d673ef89d135e9b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the recipe to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Updated Pancake Recipe"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated description of the recipe."
                                    },
                                    "instructions": {
                                        "type": "string",
                                        "example": "Updated instructions..."
                                    },
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Recipe updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Recipe"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Recipe not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Recipe not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Recipes"
                ],
                "summary": "Delete recipe by ID",
                "description": "Deletes a recipe by its ID.",
                "operationId": "9bd6f67654cbd4fbfb963e15d3f0c59a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the recipe to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Recipe deleted successfully"
                    },
                    "404": {
                        "description": "Recipe not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Recipe not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get a list of all users",
                "description": "Returns a list of all registered users.",
                "operationId": "7e2f5799553ec93c9c43e2a58490d447",
                "responses": {
                    "200": {
                        "description": "A list of users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "description": "Creates a new user with the provided data.",
                "operationId": "a1fce870c566eb5fc0cf3178ec5d2fed",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "username",
                                    "email",
                                    "password",
                                    "role"
                                ],
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "johndoe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "johndoe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "secretpassword"
                                    },
                                    "role": {
                                        "type": "string",
                                        "enum": [
                                            "admin",
                                            "user"
                                        ],
                                        "example": "user"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get user by ID",
                "description": "Returns a user by their ID.",
                "operationId": "910a0c7cf580e1c605648d82a4e57f46",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user by ID",
                "description": "Updates a user's details by their ID.",
                "operationId": "ddfe232db1870b82493bf8bd25596d37",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "newusername"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "newemail@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword"
                                    },
                                    "role": {
                                        "type": "string",
                                        "enum": [
                                            "admin",
                                            "user"
                                        ],
                                        "example": "admin"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete user by ID",
                "description": "Deletes a user by their ID.",
                "operationId": "43dd20becb1f47444e484cbb18ce345c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User deleted successfully"
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Category": {
                "title": "Category",
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "recipes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Recipe"
                        }
                    }
                },
                "type": "object"
            },
            "FavoriteRecipe": {
                "title": "FavoriteRecipe",
                "required": [
                    "user_id",
                    "recipe_id"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "user_id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "recipe_id": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "type": "object"
            },
            "Ingredient": {
                "title": "Ingredient",
                "description": "Ingredient model",
                "properties": {
                    "": {
                        "title": "Recipes",
                        "description": "List of recipes that include this ingredient",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Recipe"
                        }
                    },
                    "id": {
                        "title": "ID",
                        "description": "ID of the ingredient",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "fillable": {
                        "title": "Name",
                        "description": "Name of the ingredient",
                        "type": "string",
                        "example": "Sugar"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Ingredient"
                }
            },
            "Recipe": {
                "title": "Recipe",
                "description": "Recipe model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID of the recipe",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "title": {
                        "title": "Title",
                        "description": "Title of the recipe",
                        "type": "string",
                        "example": "Delicious Pancakes"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Brief description of the recipe",
                        "type": "string",
                        "example": "A simple and quick pancake recipe."
                    },
                    "instructions": {
                        "title": "Instructions",
                        "description": "Detailed cooking instructions for the recipe",
                        "type": "string",
                        "example": "1. Mix ingredients... 2. Cook on medium heat..."
                    },
                    "user_id": {
                        "title": "User ID",
                        "description": "ID of the user who created the recipe",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "category_id": {
                        "title": "Category ID",
                        "description": "ID of the category this recipe belongs to",
                        "type": "integer",
                        "format": "int64",
                        "example": 2
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Recipe"
                }
            },
            "User": {
                "title": "User",
                "description": "User model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID of the user",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the user",
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "title": "Email",
                        "description": "Email address of the user",
                        "type": "string",
                        "example": "johndoe@example.com"
                    },
                    "email_verified_at": {
                        "title": "Email Verified At",
                        "description": "Timestamp when the email was verified",
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-08-29T12:34:56Z"
                    },
                    "profile_photo_url": {
                        "title": "Profile Photo URL",
                        "description": "URL of the user's profile photo",
                        "type": "string",
                        "example": "https://example.com/photos/johndoe.jpg"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "User"
                }
            }
        }
    },
    "tags": [
        {
            "name": "Categories",
            "description": "Operations related to recipe categories"
        },
        {
            "name": "Ingredients",
            "description": "Operations related to ingredients"
        },
        {
            "name": "Recipes",
            "description": "Operations related to recipes"
        },
        {
            "name": "Users",
            "description": "Operations related to users"
        },
        {
            "name": "Favorite Recipes",
            "description": "Favorite Recipes"
        }
    ]
}